{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","angle","content","name","text","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","affair","_id","priority","styles","flex","item","button","onClick","id","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","key","classNames","all","filter","activeFilter","high","middle","low","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","type","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","onBlurInputHandler","onKeyPressHandler","onFocusHandler","inputClass","normal","onBlur","onFocus","disabled","addButton","children","redText","GreetingContainer","users","addUserCallback","setName","setError","trimmedName","trim","alert","length","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.329ec44e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"high\":\"Affairs_high__3WvSV\",\"low\":\"Affairs_low__2chDs\",\"middle\":\"Affairs_middle__125Xv\",\"button\":\"Affairs_button__19u18\",\"item\":\"Affairs_item__24VY1\",\"flex\":\"Affairs_flex__1vEPs\",\"activeFilter\":\"Affairs_activeFilter__U6cZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3gEvb\",\"avatar\":\"Message_avatar__1GJK-\",\"content\":\"Message_content__33lGR\",\"angle\":\"Message_angle__3tKka\",\"text\":\"Message_text__1oWlD\",\"name\":\"Message_name__2uGGN\",\"time\":\"Message_time__3Ne7N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3NjOw\",\"error\":\"Greeting_error__2VOm6\",\"redText\":\"Greeting_redText__2ogWK\",\"normal\":\"Greeting_normal__X_NIE\",\"addButton\":\"Greeting_addButton__34D7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3pJZo\",\"errorInput\":\"SuperInputText_errorInput__2Nq1_\",\"error\":\"SuperInputText_error__vAzsU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2NLRy\",\"red\":\"SuperButton_red__1ycTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__PxnPv\",\"column\":\"HW4_column__2CuVa\",\"testSpanError\":\"HW4_testSpanError__27ja1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Q28A\",\"spanClassName\":\"SuperCheckbox_spanClassName__UMM3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1AErT\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype propsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n// function Message(props: propsType) {\r\n//     return (\r\n//         <>\r\n//             <div className={s.message}>\r\n//                 <img src={props.avatar} alt=\"\"/>\r\n//                 <div className={s.messageBody}>\r\n//                     <div className={s.name}>{props.name}</div>\r\n//                     <div className={s.message1}>{props.message}</div>\r\n//                     <div className={s.time}>{props.time}</div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     )\r\n// }\r\n\r\nfunction Message(props: propsType) {\r\n    return (\r\n        <div className={s.message}>\r\n            <img src={props.avatar} alt=\"avatar\" className={s.avatar}/>\r\n            <div className={s.angle}/>\r\n            <div className={s.content}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.text}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport styles from './Affairs.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const {name, _id, priority} = props.affair\n    const deleteCallback = (id: number): void => {\n        props.deleteAffairCallback(id)\n    }\n\n    return (\n        <div className={styles.flex}>\n            <span className={styles.item}>{name}</span>\n            <span className={`${styles[props.affair.priority]} ${styles.item}`}>[{priority}]</span>\n            {/*<button className={styles.button} onClick={() => deleteCallback(_id)}>X</button>*/}\n            <SuperButton\n                className={`${styles.item} ${styles.button}`} onClick={() => deleteCallback(_id)}>X</SuperButton>\n            {/*<button onClick={() => props.deleteAffairCallback(_id)}>X</button>*/}\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport styles from './Affairs.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair  // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    }\n    const setLow = () => {\n        props.setFilter(\"low\")\n    }\n\n    const classNames = {\n        all: props.filter === \"all\" ? styles.activeFilter : styles.button,\n        high: props.filter === \"high\" ? styles.activeFilter : styles.button,\n        middle: props.filter === \"middle\" ? styles.activeFilter : styles.button,\n        low: props.filter === \"low\" ? styles.activeFilter : styles.button\n    }\n\n\n    return (\n\n        <div>\n\n            {mappedAffairs}\n\n            <SuperButton className={classNames.all} onClick={setAll}>All</SuperButton>\n            <SuperButton className={classNames.high} onClick={setHigh}>High</SuperButton>\n            <SuperButton className={classNames.middle} onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton className={classNames.low} onClick={setLow}>Low</SuperButton>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs\n    else return affairs.filter((a) => a.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter((a) => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = Omit<DefaultInputPropsType, 'type'> & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error?s.errorInput:s.superInput} ${className}` // need to fix with (?:) and s.superInput\n    // console.log(finalInputClassName)\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent, FocusEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: boolean // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onBlurInputHandler: (e: FocusEvent<HTMLInputElement>) => void\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    onFocusHandler: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {\r\n        name,\r\n        setNameCallback,\r\n        addUser,\r\n        error,\r\n        totalUsers,\r\n        onBlurInputHandler,\r\n        onKeyPressHandler,\r\n        onFocusHandler\r\n    } // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.normal // need to fix with (?:)\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*<input value={name}*/}\r\n            {/*       onChange={setNameCallback}*/}\r\n            {/*       className={inputClass}*/}\r\n            {/*       onKeyPress={onKeyPressHandler}*/}\r\n            {/*       onBlur={onBlurInputHandler}*/}\r\n            {/*       onFocus={onFocusHandler}*/}\r\n            {/*/>*/}\r\n\r\n            <SuperInputText\r\n                value={name}\r\n                onChange={setNameCallback}\r\n                className={inputClass}\r\n                onKeyPress={onKeyPressHandler}\r\n                onBlur={onBlurInputHandler}\r\n                onFocus={onFocusHandler}/>\r\n\r\n            {/*<button*/}\r\n            {/*    onClick={addUser}*/}\r\n            {/*    disabled={error}*/}\r\n            {/*    className={s.addButton}*/}\r\n            {/*>*/}\r\n            {/*    add*/}\r\n            {/*</button>*/}\r\n\r\n            <SuperButton\r\n                onClick={addUser}\r\n                disabled={error}\r\n                className={s.addButton}\r\n                children={'add'}/>\r\n\r\n            <span>{totalUsers}</span>\r\n            <div className={s.redText}>{error && 'ошибка: обязтельное поле'}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState, ChangeEvent, FocusEvent, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]// need to fix any\r\n    addUserCallback: (name: string) => void// need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<boolean>(false) // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n        setError(false)\r\n    }\r\n\r\n    const trimmedName = name.trim()\r\n\r\n    const addUser = () => {\r\n\r\n        if (trimmedName) {\r\n            addUserCallback(trimmedName)\r\n            alert(`Hello  ${trimmedName}`)\r\n            setName('')\r\n        } else {\r\n            setError(true)\r\n        }\r\n        // need to fix\r\n    }\r\n\r\n    const onFocusHandler = (e: FocusEvent<HTMLInputElement>) => {\r\n        setError(false)\r\n    }\r\n\r\n    const onBlurInputHandler = (e: FocusEvent<HTMLInputElement>) => {\r\n        trimmedName || setError(true)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        (e.key === 'Enter' && name)\r\n            ? addUser()\r\n            : setError(true)\r\n    }\r\n\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onBlurInputHandler={onBlurInputHandler}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n            onFocusHandler={onFocusHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([...users, {_id: v1(), name}]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer\r\n                users={users}\r\n                addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    // console.log(onChange)\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n    // console.log(children)\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, работает ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            {/*<HashRouter>*/}\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            {/*</HashRouter>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n//1","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}